apiVersion: apps/v1
kind: Deployment
metadata:
  name: helloworld-deployment
spec:
  replicas: 2
  template:
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - topologyKey: kubernetes.io/hostname
            labelSelector:
              matchExpressions:
              - key: app.kubernetes.io/component
                operator: In 
                values:
                - webserver
              - key: app.kubernetes.io/instance
                operator: In 
                values:
                - default
      topologySpreadConstraints:
      - maxSkew: 1
        topologyKey: topology.kubernetes.io/zone
        whenUnsatisfiable: DoNotSchedule
        labelSelector: 
          matchLabels:
            app.kubernetes.io/name: nginx
            app.kubernetes.io/part-of: helloworld
            app.kubernetes.io/instance: default
            app.kubernetes.io/component: webserver
      containers:
        - name: hello-world
          image: helloworld-webserver:1.0.0
          readinessProbe:
            httpGet:
              path: /env.html
              port: http
            periodSeconds: 5
            failureThreshold: 1
            successThreshold: 1
            timeoutSeconds: 1
          livenessProbe:
            httpGet:
              path: /env.html
              port: http
            periodSeconds: 10
            failureThreshold: 3
            successThreshold: 1
            timeoutSeconds: 1
          imagePullPolicy: IfNotPresent
          resources:
            requests:
              cpu: 10m
              memory: 32Mi
            limits:
              cpu: 50m
              memory: 64Mi
          volumeMounts:
          - name: nginx-conf
            mountPath: /etc/nginx/nginx.conf
            subPath: nginx.conf
          - name: htpasswd1
            mountPath: /etc/nginx/.htpasswd1
            subPath: .htpasswd1
          - name: htpasswd2
            mountPath: /etc/nginx/.htpasswd2
            subPath: .htpasswd2
          - name: env
            mountPath: /www/env.html
            subPath: env.html
          - name: example-html
            mountPath: /www/example.html
            subPath: example.html
          ports:
          - name: http
            containerPort: 8080
      volumes:
        - name: nginx-conf
          configMap:
            name: nginx-conf
        - name: htpasswd1
          secret:
            secretName: htpasswd1
        - name: htpasswd2
          secret:
            secretName: htpasswd2
        - name: env
          configMap:
            name: env
        - name: example-html
          configMap:
            name: example-html
    metadata:
      labels:
        app.kubernetes.io/name: nginx
        app.kubernetes.io/part-of: helloworld
        app.kubernetes.io/instance: default
        app.kubernetes.io/component: webserver
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 50%
      maxUnavailable: 50%
  selector:
    matchLabels:
      app.kubernetes.io/name: nginx
      app.kubernetes.io/part-of: helloworld
      app.kubernetes.io/instance: default
      app.kubernetes.io/component: webserver
